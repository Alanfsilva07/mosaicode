#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Libraries
import gi
gi.require_version('Gtk', '3.0')
from gi.repository import Gtk


from harpia import s2idirectory
from harpia.model.diagrammodel import DiagramModel
from harpia.model.connectionmodel import ConnectionModel
from harpia.control.diagramcontrol import DiagramControl
from harpia.control.codegenerator import CodeGenerator


import sys
import argparse
import os

#---------------------------------------------------
#--------HARPIA FRONTEND MAIN FUNCTION--------------
#---------------------------------------------------

class Log(object):
    def log(self, msg):
        print msg

def main(argv):

    os.environ['HARPIA_DATA_DIR']="/usr/share/harpia/"
    s2idirectory.load()
    s2idirectory.Log = Log()

    parser = argparse.ArgumentParser()
    parser.add_argument("-x", "--examples", help="Generate examples", action='store_false')
    parser.add_argument("-c", "--compile", help="Compile examples", action='store_false')
    args = parser.parse_args()

    for key in s2idirectory.block:
        obj = s2idirectory.block[key]()
        diagram = DiagramModel()
        lenna = s2idirectory.block["15"]()
        diagram.add_block(lenna)
        diagram.add_block(obj)
 
        cont = 0
        intypes = obj.get_description()["InTypes"]
        for inkey in intypes:
            if intypes[inkey] == "HRP_IMAGE":
                diagram.connect_blocks(lenna, 0, obj, cont)
            cont = cont + 1

        if args.examples:
            # Save Examples
            diagram.set_file_name("/tmp/" + obj.get_description()["Label"] + ".hrp")
            print "Generating", diagram.get_file_name(), "file"
            control = DiagramControl(diagram)
            control.save()

        if args.compile:
            # Compile Examples
            print "Generating code..."
            generator = CodeGenerator(diagram)
            generator.compile()
            print obj.get_description()["Label"], " - compiled\n"

    #----------------------------------------------------------------------

if __name__ == '__main__':
    main(sys.argv)

    #----------------------------------------------------------------------
